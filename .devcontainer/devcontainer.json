{
	"name": "C++ Development Environment",
	"build": {
		"dockerfile": "../Dockerfile"
	},
	"workspaceFolder": "/workspace",
	"workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
	"runArgs": [
		"--init",
		"--cap-add=SYS_PTRACE",
		"--security-opt", "seccomp=unconfined"
	],
	
	// Configure tool-specific properties
	"customizations": {
		"vscode": {
			// Set *default* container specific settings.json values on container create
			"settings": {
				// Disable C++ extension IntelliSense in favor of clangd
				"C_Cpp.intelliSenseEngine": "disabled",
				"C_Cpp.autocomplete": "disabled",
				"C_Cpp.errorSquiggles": "disabled",
				"C_Cpp.default.compilerPath": "/usr/bin/g++-14",
				"C_Cpp.default.cStandard": "c17",
				"C_Cpp.default.cppStandard": "c++23",
				"C_Cpp.default.intelliSenseMode": "gcc-x64",
				"C_Cpp.clang_format_path": "/usr/bin/clang-format-20",
				"C_Cpp.codeAnalysis.clangTidy.enabled": false,
				"C_Cpp.codeAnalysis.clangTidy.path": "/usr/bin/clang-tidy-20",
				
				// CMake configuration
				"cmake.configureOnOpen": true,
				"cmake.generator": "Ninja",
				"cmake.cmakePath": "/usr/bin/cmake",
				
				// Clangd configuration as primary language server
				"clangd.path": "/usr/bin/clangd-20",
				"clangd.arguments": [
					"--header-insertion=iwyu",
					"--completion-style=detailed",
					"--function-arg-placeholders",
					"--fallback-style=llvm",
					"--clang-tidy",
					"--suggest-missing-includes",
					"--background-index",
					"--log=verbose"
				],
				"clangd.onConfigChanged": "restart",
				"clangd.serverCompletionRanking": true,
				
				// Editor configuration
				"editor.formatOnSave": true,
				"editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd",
				"editor.suggest.insertMode": "replace",
				"editor.acceptSuggestionOnCommitCharacter": false,
				
				// File associations
				"files.associations": {
					"*.h": "cpp",
					"*.hpp": "cpp",
					"*.cpp": "cpp",
					"*.cc": "cpp",
					"*.cxx": "cpp"
				},
				
				// Language-specific settings for C++
				"[cpp]": {
					"editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd",
					"editor.semanticHighlighting.enabled": true
				},
				"[c]": {
					"editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd",
					"editor.semanticHighlighting.enabled": true
				}
			},
			
			// Add the IDs of extensions you want installed when the container is created
			"extensions": [
				"ms-vscode.cpptools",
				"ms-vscode.cpptools-extension-pack",
				"ms-vscode.cmake-tools",
				"twxs.cmake",
				"llvm-vs-code-extensions.vscode-clangd",
				"ms-vscode.makefile-tools",
				"xaver.clang-format",
				"ms-python.python",
				"ms-python.debugpy",
				"vadimcn.vscode-lldb",
				"ms-vscode.hexeditor",
				"streetsidesoftware.code-spell-checker",
				"gruntfuggly.todo-tree",
				"ms-vscode.test-adapter-converter",
				"matepek.vscode-catch2-test-adapter",
				"cschlosser.doxdocgen"
			]
		}
	},
	
	// Features to add to the dev container. More info: https://containers.dev/features
	// Note: Features removed as they're already installed in the base Dockerfile
	// "features": {},
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally
	// "forwardPorts": [],
	
	// Use 'postCreateCommand' to run commands after the container is created
	"postCreateCommand": "/tmp/verify_tools.sh",
	
	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
	"remoteUser": "developer",
	
	// Configure environment variables
	"containerEnv": {
		"CC": "gcc-14",
		"CXX": "g++-14"
	},
	
	// Mount points for better performance and caching
	"mounts": [
		"source=cpp-build-cache,target=/workspace/build,type=volume"
	]
}
